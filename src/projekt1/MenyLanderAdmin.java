package projekt1;
import oru.inf.InfDB;
import oru.inf.InfException;
import javax.swing.*;
import java.awt.event.*;
import java.util.ArrayList;
import java.util.HashMap;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
public class MenyLanderAdmin extends javax.swing.JFrame {
    private InfDB idb;
    private String dbAid;
    private boolean landFanns = false; // Flagga för att hålla reda på om landet finns
    
        public MenyLanderAdmin(InfDB idb, String dbAid) {
        this.idb = idb;
        this.dbAid = dbAid;
        initComponents();
        fyllComboBox();
        fyllTextRutor();
        }
   
        
//Fyller rullistan med data från projekt i DB
       private void fyllComboBox(){
        try{
            String sqlFraga ="SELECT namn from land";
            ArrayList<HashMap<String, String>> resultat = idb.fetchRows(sqlFraga);
            
            if (resultat !=null) {
                jbxRullista.removeAllItems();
                for (HashMap <String, String> rad : resultat) {
                 jbxRullista.addItem(rad.get("namn"));
                }
            }else{
                JOptionPane.showMessageDialog(this, "Inga projekt hittades i databasen.");

            }               
            } catch (InfException e) {
                JOptionPane.showMessageDialog(this, "Fel vid hämtning av projekt.");
        } 
    }   

           //Fyller textrutor med data från tabellen projekt i DB
    private void fyllTextRutor () {
        try {
            //Hämta data med SQL fråga
            
            String sqlFraga = "SELECT sprak, politisk_struktur, ekonomi " + "FROM land " + "WHERE lid = " + dbAid;
             
            HashMap <String, String> userData = idb.fetchRow(sqlFraga);
            
            if (userData != null) {
             tfdSprak.setText(userData.get("sprak"));
             tfdPolStruk.setText(userData.get("politisk_struktur"));
             tfdEkonomi.setText(userData.get("ekonomi"));

                        
    } else { JOptionPane.showMessageDialog(this, "Ingen Data hittades om projekt.");

            } 
            
    }  catch (InfException e) { 
    JOptionPane.showMessageDialog(this, "Fel vid hämtning av data!" + e.getMessage());
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblSokEfterLand = new javax.swing.JLabel();
        tfdSprak = new javax.swing.JTextField();
        lblValjAndring = new javax.swing.JLabel();
        jbxRullista = new javax.swing.JComboBox<>();
        tfdPolStruk = new javax.swing.JTextField();
        lblAndring = new javax.swing.JLabel();
        btnSparaAndring = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        tfdEkonomi = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblSokEfterLand.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblSokEfterLand.setText("Välj land att ändra i rullistan:");

        tfdSprak.setText("Skriv här...");

        lblValjAndring.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblValjAndring.setText("Språk");

        jbxRullista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbxRullistaActionPerformed(evt);
            }
        });

        tfdPolStruk.setText("Skriv här...");

        lblAndring.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAndring.setText("Politisk struktur");

        btnSparaAndring.setText("Spara ändring");
        btnSparaAndring.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSparaAndringMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Ekonomi");

        tfdEkonomi.setText("Skriv här...");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnSparaAndring)
                .addGap(22, 22, 22))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblValjAndring, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblAndring, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfdPolStruk, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                            .addComponent(tfdSprak)
                            .addComponent(tfdEkonomi)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(jbxRullista, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addComponent(lblSokEfterLand)
                .addContainerGap(126, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(lblSokEfterLand)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbxRullista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfdSprak, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblValjAndring))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfdPolStruk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAndring))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfdEkonomi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addComponent(btnSparaAndring)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSparaAndringMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSparaAndringMouseClicked
   
        //Hämtar text från täxtfältet
        String nyttSprak = tfdSprak.getText();
        String nyttPolitiskStruktur = tfdPolStruk.getText();
        String nyttEkonomi = tfdEkonomi.getText();

        //Uppdetara ändringar i databasen
        
        try {
        //Uppdaterar/byter informationen som användare anger i textrutorna.
        String uppdatering = "UPDATE land SET " +  
        "sprak = '" + nyttSprak + "', " + 
        "politisk_struktur = '" + nyttPolitiskStruktur + "', " + 
        "ekonomi = '" + nyttEkonomi + "' " + 
        "WHERE lid = " + dbAid;
            
        System.out.println(uppdatering);
            // Kör uppdateringen
            idb.update(uppdatering);
            
            //Visa bekräftelse av ändringar
            JOptionPane.showMessageDialog(this, "Dina förändringar i landet är sparade!");
        } catch (Exception e) {
            //Hanterar fel
            JOptionPane.showMessageDialog (this, "Fel vid inmatning av ändringar!" + e.getMessage());
        }
        
    }//GEN-LAST:event_btnSparaAndringMouseClicked

    private void jbxRullistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbxRullistaActionPerformed
    String valtLandNamn = (String) jbxRullista.getSelectedItem();
    
    if (valtLandNamn != null) {
        try {
        // SQL-fråga för att hämta data baserat på partnerns namn
        String sqlFraga = "SELECT sprak, politisk_struktur, ekonomi " + "FROM land " + "WHERE namn = '" + valtLandNamn + "'";
                               

        HashMap<String, String> userData = idb.fetchRow(sqlFraga);
            
        if (userData != null) {
        // Uppdatera textfälten med hämtad data
        tfdSprak.setText(userData.get("sprak"));
        tfdPolStruk.setText(userData.get("politisk_struktur"));
        tfdEkonomi.setText(userData.get("ekonomi"));

                
        } else {
            JOptionPane.showMessageDialog(this, "Ingen data hittades för det valda landet.");
        }
        } catch (InfException e) {
            JOptionPane.showMessageDialog(this, "Fel vid hämtning av data: " + e.getMessage());
        }
    }  
    }//GEN-LAST:event_jbxRullistaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenyLanderAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenyLanderAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }  catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenyLanderAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenyLanderAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new MenyLanderAdmin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSparaAndring;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JComboBox<String> jbxRullista;
    private javax.swing.JLabel lblAndring;
    private javax.swing.JLabel lblSokEfterLand;
    private javax.swing.JLabel lblValjAndring;
    private javax.swing.JTextField tfdEkonomi;
    private javax.swing.JTextField tfdPolStruk;
    private javax.swing.JTextField tfdSprak;
    // End of variables declaration//GEN-END:variables
}

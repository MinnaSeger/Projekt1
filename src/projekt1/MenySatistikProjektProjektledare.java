/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package projekt1;
import oru.inf.InfDB;
import oru.inf.InfException;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author elsa
 */
public class MenySatistikProjektProjektledare extends javax.swing.JFrame {
    private InfDB idb;
    private String dbAid;

    /**
     * Creates new form MenySatistikProjektProjektledare
     */
    public MenySatistikProjektProjektledare(InfDB idb, String dbAid) {
    this.idb=idb; 
    this.dbAid = dbAid;
        initComponents();

 fyllTabeller();

    }
    
        private void fyllTabeller() {
        fyllStatistikKostnadPerLand();
        fyllStatistikOverPartners();
        fyllStatistikOverLander();
        fyllProjektetsKostnad();
    }

    private void fyllStatistikKostnadPerLand() {
        try {
            String query = "SELECT Land, SUM(Kostnad) AS TotalKostnad FROM Projekt GROUP BY Land";
            ArrayList<HashMap<String, String>> resultat = idb.fetchRows(query);

            DefaultTableModel model = (DefaultTableModel) tblStatistikKostnadPerLand.getModel();
            model.setRowCount(0); // Rensa tabellen

            for (HashMap<String, String> rad : resultat) {
                model.addRow(new Object[]{rad.get("Land"), rad.get("TotalKostnad")});
            }
        } catch (InfException e) {
            System.out.println("Fel vid hämtning av kostnad per land: " + e.getMessage());
        }
    }

    private void fyllStatistikOverPartners() {
        try {
            String query = "SELECT PartnerNamn FROM Partner";
            ArrayList<HashMap<String, String>> resultat = idb.fetchRows(query);

            DefaultTableModel model = (DefaultTableModel) tblStatistikOverPartners.getModel();
            model.setRowCount(0); // Rensa tabellen

            for (HashMap<String, String> rad : resultat) {
                model.addRow(new Object[]{rad.get("PartnerNamn")});
            }
        } catch (InfException e) {
            System.out.println("Fel vid hämtning av partners: " + e.getMessage());
        }
    }

    private void fyllStatistikOverLander() {
        try {
            String query = "SELECT DISTINCT Land FROM Projekt";
            ArrayList<HashMap<String, String>> resultat = idb.fetchRows(query);

            DefaultTableModel model = (DefaultTableModel) tblStatistikOverLander.getModel();
            model.setRowCount(0); // Rensa tabellen

            for (HashMap<String, String> rad : resultat) {
                model.addRow(new Object[]{rad.get("Land")});
            }
        } catch (InfException e) {
            System.out.println("Fel vid hämtning av länder: " + e.getMessage());
        }
    }

    private void fyllProjektetsKostnad() {
        try {
            String query = "SELECT ProjektNamn, Kostnad FROM Projekt";
            ArrayList<HashMap<String, String>> resultat = idb.fetchRows(query);

            DefaultTableModel model = (DefaultTableModel) tblVisaProjektetsKostnad.getModel();
            model.setRowCount(0); // Rensa tabellen

            for (HashMap<String, String> rad : resultat) {
                model.addRow(new Object[]{rad.get("ProjektNamn"), rad.get("Kostnad")});
            }
        } catch (InfException e) {
            System.out.println("Fel vid hämtning av projektets kostnad: " + e.getMessage());
        }
    
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblStatistikKostnadPerLand = new javax.swing.JLabel();
        lblStatistikpartners = new javax.swing.JLabel();
        lblStatistiklander = new javax.swing.JLabel();
        lblProjektetskostnad = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStatistikKostnadPerLand = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblVisaProjektetsKostnad = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblStatistikOverLander = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblStatistikOverPartners = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblStatistikKostnadPerLand.setText("Statistik Kostand per land ");

        lblStatistikpartners.setText("Statistik över partners ");

        lblStatistiklander.setText("Statistik över länder");

        lblProjektetskostnad.setText("Visa projektets kostnad");

        tblStatistikKostnadPerLand.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Land", "Kostnad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblStatistikKostnadPerLand);

        tblVisaProjektetsKostnad.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Projekt", "Kostnad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblVisaProjektetsKostnad);

        tblStatistikOverLander.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Länder"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblStatistikOverLander);

        tblStatistikOverPartners.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Partners"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tblStatistikOverPartners);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblStatistikpartners)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblStatistikKostnadPerLand)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblStatistiklander)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblProjektetskostnad)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(lblStatistikpartners)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(lblStatistikKostnadPerLand)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(lblStatistiklander)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(lblProjektetskostnad)
                .addGap(34, 34, 34)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenySatistikProjektProjektledare.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenySatistikProjektProjektledare.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenySatistikProjektProjektledare.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenySatistikProjektProjektledare.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new MenySatistikProjektProjektledare().setVisible(true);
            }
        });
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblProjektetskostnad;
    private javax.swing.JLabel lblStatistikKostnadPerLand;
    private javax.swing.JLabel lblStatistiklander;
    private javax.swing.JLabel lblStatistikpartners;
    private javax.swing.JTable tblStatistikKostnadPerLand;
    private javax.swing.JTable tblStatistikOverLander;
    private javax.swing.JTable tblStatistikOverPartners;
    private javax.swing.JTable tblVisaProjektetsKostnad;
    // End of variables declaration//GEN-END:variables
}

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package projekt1;
import oru.inf.InfDB;
import oru.inf.InfException;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author elsa
 */
public class MenyAnstalldaProjektledare extends javax.swing.JFrame {
    private InfDB idb;
    private String dbAid;

    /**
     * Creates new form MenyAnstalldaProjektledare
     */
    
    public MenyAnstalldaProjektledare(InfDB idb, String dbAid) {
         this.idb = idb;
        this.dbAid = dbAid;
        initComponents();
        
           fyllAnstalldaLista(); // Fyll listan med anställda på avdelning
    }
    // Visa alla anställda på avdelningen
    private void fyllAnstalldaLista() {

        try {
            // SQL-fråga för att hämta alla anställda på projektchefens avdelning
            String SQLfraga = "SELECT CONCAT(a.Fornamn, ' ', a.Efternamn) AS namn, a.epost "
                             + "FROM anstalld a "
                             + "JOIN avdelning v ON a.avdelning = v.avdid "
                             + "WHERE v.avdid = (SELECT avdelning FROM anstalld WHERE aid = '" + dbAid + "')";
            
            ArrayList<HashMap<String, String>> resultat = idb.fetchRows(SQLfraga);

            DefaultListModel<String> model = new DefaultListModel<>();
            listaAvdelningensPersonal.setModel(model); // Rensa listan

            if (resultat != null) {
                // Lägg till varje anställd i listan
                for (HashMap<String, String> rad : resultat) {
                    String namnOchEpost = rad.get("namn") + " - " + rad.get("epost");
                    model.addElement(namnOchEpost); // Lägg till namn och e-post
                }
            } else {
                model.addElement("Inga anställda hittades.");
            }
        } catch (InfException e) {
            JOptionPane.showMessageDialog(this, "Fel vid hämtning av anställda: " + e.getMessage());
        }
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblAnstallda = new javax.swing.JLabel();
        lblAvdelningensPersonal = new javax.swing.JLabel();
        tfdSokAnstalld = new javax.swing.JTextField();
        btnSok = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaAvdelningensPersonal = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblAnstallda.setText("Anställda");

        lblAvdelningensPersonal.setText("Avdelningens Personal:");

        tfdSokAnstalld.setText("Sök Anställd");
        tfdSokAnstalld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfdSokAnstalldActionPerformed(evt);
            }
        });

        btnSok.setText("Sök");
        btnSok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSokActionPerformed(evt);
            }
        });

        listaAvdelningensPersonal.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(listaAvdelningensPersonal);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAnstallda)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSok)
                            .addComponent(tfdSokAnstalld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(75, 75, 75)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblAvdelningensPersonal)
                .addGap(71, 71, 71))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(lblAnstallda)
                .addGap(8, 8, 8)
                .addComponent(lblAvdelningensPersonal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(tfdSokAnstalld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSok))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(76, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfdSokAnstalldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfdSokAnstalldActionPerformed
        // TODO add your handling code here:
        
        // Söka när Enter trycks
        btnSokActionPerformed(evt);
        
    }//GEN-LAST:event_tfdSokAnstalldActionPerformed

    private void btnSokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSokActionPerformed
        // TODO add your handling code here:
        
        try {
            String sokText = tfdSokAnstalld.getText().trim();
            if (sokText.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Ange ett namn eller en e-postadress att söka efter.");
                return;
            }

String sqlFraga = "SELECT CONCAT(a.Fornamn, ' ', a.Efternamn) AS namn, a.epost "
                 + "FROM anstalld a "
                 + "JOIN avdelning v ON a.avdelning = v.avdid "
                 + "WHERE v.avdid = (SELECT avdelning FROM anstalld WHERE aid = '" + dbAid + "') "
                 + "AND (a.Fornamn LIKE '" + sokText + "' OR a.Efternamn LIKE '" + sokText + "' OR a.epost LIKE '" + sokText + "')";

            System.out.println("SQL-fråga: " + sqlFraga); // För felsökning

            ArrayList<HashMap<String, String>> resultat = idb.fetchRows(sqlFraga);

            DefaultListModel<String> model = new DefaultListModel<>();
            listaAvdelningensPersonal.setModel(model);

            if (resultat != null && !resultat.isEmpty()) {
                for (HashMap<String, String> rad : resultat) {
                    String namnOchEpost = rad.get("namn") + " - " + rad.get("epost");
                    model.addElement(namnOchEpost);
                }
            } else {
                model.addElement("Ingen handläggare matchade sökningen.");
            }
        } catch (InfException e) {
            JOptionPane.showMessageDialog(this, "Fel vid sökning: " + e.getMessage());
        }

    }//GEN-LAST:event_btnSokActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenyAnstalldaProjektledare.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenyAnstalldaProjektledare.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenyAnstalldaProjektledare.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenyAnstalldaProjektledare.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new MenyAnstalldaProjektledare().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSok;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAnstallda;
    private javax.swing.JLabel lblAvdelningensPersonal;
    private javax.swing.JList<String> listaAvdelningensPersonal;
    private javax.swing.JTextField tfdSokAnstalld;
    // End of variables declaration//GEN-END:variables
}

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package projekt1;
import oru.inf.InfDB;
import oru.inf.InfException;
import java.util.HashMap;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;

/**
 *
 * @author elsa
 */
public class MenyAndraPartnersProjektledare extends javax.swing.JFrame {
     private InfDB idb;
     private String dbAid;

    /**
     * Creates new form MenyAndraPartnersProjektledare
     */
    public MenyAndraPartnersProjektledare(InfDB idb, String dbAid) {
         this.idb=idb; 
         this.dbAid = dbAid;
        initComponents();
        
        visaPartnersITabell();
    }
    
       // Visa alla projekt och partners
    private void visaPartnersITabell() {
     try {
            String sqlFraga = "SELECT partner.namn " +
                 "FROM partner " +
                 "JOIN projekt_partner ON partner_pid = projekt_partner.partner_pid " +
                 "JOIN projekt ON projekt_partner.pid = projekt.pid " +
                 "WHERE projektchef = " + dbAid;
            
            ArrayList<HashMap<String, String>> partners = idb.fetchRows(sqlFraga);

            // Töm tabellen innan vi fyller på
            DefaultTableModel model = (DefaultTableModel) tblPartners.getModel();
            model.setRowCount(0);  // Tömmer tabellen

            // Lägg till rader i tabellen
            for (HashMap<String, String> row : partners) {
                String partner = row.get("namn");  // Får namnet på partnern
                model.addRow(new Object[]{partner});
            }

        } catch (InfException e) {
            JOptionPane.showMessageDialog(null, "Fel vid hämtning av data: " + e.getMessage(), "Fel", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblPartners = new javax.swing.JTable();
        lblProjektetsPartners = new javax.swing.JLabel();
        tfdLaggTillPartner = new javax.swing.JTextField();
        btnLaggTillPartner = new javax.swing.JButton();
        tfdTaBortPartner = new javax.swing.JTextField();
        btnTaBortPartner = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblPartners.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Partner"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPartners);

        lblProjektetsPartners.setText("Projektets partners");

        tfdLaggTillPartner.setText("Ange partner");

        btnLaggTillPartner.setText("Lägg till partner");
        btnLaggTillPartner.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLaggTillPartnerMouseClicked(evt);
            }
        });

        tfdTaBortPartner.setText("Ange partner");

        btnTaBortPartner.setText("Ta bort partner");
        btnTaBortPartner.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTaBortPartnerMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(lblProjektetsPartners)))
                .addContainerGap(14, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tfdTaBortPartner, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                    .addComponent(tfdLaggTillPartner))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnLaggTillPartner, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnTaBortPartner, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(33, 33, 33))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(lblProjektetsPartners)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfdLaggTillPartner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLaggTillPartner))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfdTaBortPartner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTaBortPartner))
                .addContainerGap(75, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLaggTillPartnerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLaggTillPartnerMouseClicked
        // TODO add your handling code here:
        
    // Lägg till partner                                                
    String partnerNamn = tfdLaggTillPartner.getText().trim();

    if (partnerNamn.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Fyll i partners namn.", "Fel", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        // Hämta PID för projektet som projektchefen ansvarar för
        String sqlFraga = "SELECT pid FROM projekt WHERE projektchef = " + dbAid;
        ArrayList<HashMap<String, String>> projektId = idb.fetchRows(sqlFraga);

        if (projektId.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Projekt finns inte för denna projektchef.", "Fel", JOptionPane.ERROR_MESSAGE);
            return;
        }



        String partnerPidSQL = "SELECT partner_pid FROM partner WHERE namn = " + "namn";
        ArrayList<HashMap<String, String>> partnerIdResult = idb.fetchRows(partnerPidSQL);

        if (partnerIdResult.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Partnern finns inte.", "Fel", JOptionPane.ERROR_MESSAGE);
            return;
        }


        String insertSQL = "INSERT INTO projekt_partner (partner_pid, pid) VALUES (?, ?)";
        idb.insert(insertSQL);

        JOptionPane.showMessageDialog(null, "Partner tillagd!");
        visaPartnersITabell(); // Uppdatera tabellen
    } catch (InfException e) {
        JOptionPane.showMessageDialog(null, "Fel vid tillägg av partner: " + e.getMessage(), "Fel", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnLaggTillPartnerMouseClicked

    private void btnTaBortPartnerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTaBortPartnerMouseClicked
        // TODO add your handling code here:
     
        //ta bort partner
        
        String partnerNamn = tfdTaBortPartner.getText().trim();

    if (partnerNamn.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Fyll i partners namn.", "Fel", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        String sqlFraga = "SELECT pid FROM projekt WHERE projektchef = ?";
        ArrayList<HashMap<String, String>> projektId = idb.fetchRows(sqlFraga);

        if (projektId.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Projekt finns inte för denna projektchef.", "Fel", JOptionPane.ERROR_MESSAGE);
            return;
        }


        String sqlFragaPartner = "SELECT partner_pid FROM partner WHERE partner.namn = " + partnerNamn;
        ArrayList<HashMap<String, String>> partnerPidResult = idb.fetchRows(sqlFragaPartner);

        if (partnerPidResult.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Partnern finns inte.", "Fel", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String deleteSQL = "DELETE partner.namn FROM projekt_partner WHERE partner.namn = " + partnerNamn;
        idb.delete(partnerNamn);
        JOptionPane.showMessageDialog(null, "Partner borttagen!");

        // Uppdatera tabellen
        visaPartnersITabell();
    } catch (InfException e) {
        JOptionPane.showMessageDialog(null, "Fel vid borttagning av partner: " + e.getMessage(), "Fel", JOptionPane.ERROR_MESSAGE);
}
    }//GEN-LAST:event_btnTaBortPartnerMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenyAndraPartnersProjektledare.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenyAndraPartnersProjektledare.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenyAndraPartnersProjektledare.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenyAndraPartnersProjektledare.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new MenyAndraPartnersProjektledare().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLaggTillPartner;
    private javax.swing.JButton btnTaBortPartner;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblProjektetsPartners;
    private javax.swing.JTable tblPartners;
    private javax.swing.JTextField tfdLaggTillPartner;
    private javax.swing.JTextField tfdTaBortPartner;
    // End of variables declaration//GEN-END:variables
}
